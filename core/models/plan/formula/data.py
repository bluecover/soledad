# -*- coding: utf-8 -*-

average_income = {
    '110000': ('北京', '3272', '6544'),
    '120000': ('天津', '2286', '4572'),
    '310000': ('上海', '4267', '8534'),
    '500000': ('重庆', '2022', '4044'),
    '440300': ('深圳', '4072', '8144'),
    '440100': ('广州', '2950', '5900'),
    '330100': ('杭州', '2757', '5514'),
    '320100': ('南京', '2676', '5352'),
    '320500': ('苏州', '2405', '4811'),
    '210200': ('大连', '2618', '5237'),
    '210100': ('沈阳', '1676', '3352'),
    '510100': ('成都', '2350', '4699'),
    '350200': ('厦门', '2291', '4583'),
    '350100': ('福州', '1717', '3433'),
    '420100': ('武汉', '1947', '3894'),
    '610100': ('西安', '1942', '3884'),
    '430100': ('长沙', '1897', '3793'),
    '340100': ('合肥', '1891', '3781'),
    '220100': ('长春', '1780', '3559'),
    '370200': ('青岛', '1764', '3528'),
    '370100': ('济南', '1753', '3506'),
    '410100': ('郑州', '1615', '3229'),
    '130100': ('石家庄', '1405', '2809'),
    '230100': ('哈尔滨', '1332', '2664'),
    # ('其他城市','1240','2480')
}


target_name = {
    '1': '旅行',
    '2': '购物',
    '3': '继续教育',
    '4': '结婚',
    '5': '育儿',
    '6': '子女教育',
    '7': '买车',
    '8': '买房首付',
    '9': '提前还贷',
    '10': '养老金储备',
    '11': '其他',
}

net_assets_data_ratio = [
    0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6,
    0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 0.98]
net_assets_data_individual = [
    -50000, -10000, -3000, 0, 600, 2000, 4000, 7300, 11000, 17000, 25000,
    35000, 50000, 70000, 100000, 160000, 260000, 450000, 800000, 1500000,
    5000000]
net_assets_data_family = [
    -50000, 0, 10000, 23000, 50000, 85000, 130000, 200000, 300000, 360000,
    420000, 490000, 600000, 750000, 900000, 1000000, 1300000, 1600000, 2000000,
    3500000, 6000000]

expend_month_data_ratio = [
    0.1, 0.5, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,
    0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 0.98]
expend_month_data_individual = [
    0, 400, 600, 800, 950, 1100, 1250, 1500, 1700, 1900, 2200, 2500, 2800,
    3100, 3500, 4000, 4700, 6000, 8000, 12000, 22000]
expend_month_data_family = [
    0, 1000, 1400, 1800, 2100, 2500, 2900, 3300, 3800, 4200, 4600, 5100, 5500,
    6000, 6500, 7200, 8000, 8900, 10000, 13000, 50000]

# risk_rank:[
# 低风险, 中风险, 高风险, 平均回报, 标准差, 2倍标准差, 最低, 最高, 平均回报,
# 总回报]
assets_allocation_data = {
    '1': [0.6, 0.3, 0.1, 0.0649, 0.0324, 0.0649, 0.0, 0.1297, 0.0746, 1.0540],
    '2': [0.20, 0.60, 0.20, 0.0797, 0.0649, 0.1297, -0.05, 0.2094, 0.0960,
          1.5005],
    '3': [0.20, 0.45, 0.35, 0.0940, 0.0967, 0.1934, -0.0994, 0.2874, 0.1162,
          2.0032],
    '4': [0.25, 0.25, 0.50, 0.1076, 0.1288, 0.2575, 0.-1499, 0.3651, 0.1316,
          2.4443],
    '5': [0.35, 0.0, 0.65, 0.1205, 0.1605, 0.3210, -0.2005, 0.4415, 0.1438,
          2.8333],
}

# plan:[2011, 2011, 2012, 2013, 14年1-6月, 综合收益率]
average_earning_data = {
    '1': [0.0522, 0.0085, 0.0575, 0.0553, 0.0467, 0.2396],
    '2': [0.0543, -0.033, 0.065, 0.0607, 0.0435, 0.2017],
    '3': [0.049, -0.0709, 0.0623, 0.0815, 0.0331, 0.1568],
    '4': [0.043, -0.1068, 0.0585, 0.1035, 0.0223, 0.1123],
    '5': [0.0362, -0.1406, 0.0534, 0.1264, 0.011, 0.0684],
    '6': [0.0288, -0.2432, 0.0553, 0.1676, -0.01, -0.0502],
}

target_insure_explain_data = {
    '社保': (
        '建议参投，一般由工作单位参投，也可通过所在街道以个人身份参投；'
        '无法参投则需购买医疗险补充相应保障。'),
    '意外险': (
        '推荐购买性价比较高的消费型险种：综合意外险，'
        '以较低的保费实现意外致伤、致残、致死的保障，每次购买一年的保障。'
        '关于保额，我们按照生命价值法为您准确测算。'),
    '重疾险': (
        '推荐购买消费型险种：定期重疾险，以较低的保费提供对常规重大疾病的充足'
        '保障，但保障年限有限，需日后补充终身重疾险。关于保额，我们按照家庭负'
        '担法与生命价值法为您准确测算。'),
    '寿险': (
        '推荐购买消费型险种：定期寿险，以很低的保费提供可观的身故赔偿，'
        '给家人一份保障。关于保额，我们按照家庭负担法与生命价值法为您准'
        '确测算。'),
    '少儿医保': '建议参投，学龄前儿童通过所在街道参投，学生通过学校参投。',
    '儿童险': (
        '推荐购买性价比较高的消费型险种：儿童综合险，以很低的保费提供意外、'
        '重疾、医疗等对儿童十分有针对性的保障。关于保额，一般未成年人保额10'
        '万元已比较充足。')
}
